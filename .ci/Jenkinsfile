@Library("jenlib") _

final String PROJECT_NAME = "much-demos-such-wow"

boolean deploy = env.GERRIT_EVENT_TYPE == "change-merged"

try {
	withCcache() {
		wafDefaultPipeline(
			projects           : ["${PROJECT_NAME}"],
			container          : [
				app: "dls",
				singularityArgs: "--overlay /containers/overlays/2021-09-27_bullseye_texlive.img"
			],
			moduleOptions      : [modules: ["ppu-toolchain"]],
			testSlurmResource  : getHxTestResource(3),
			preTestHook        : { configureHxCubeBitfile() },
			testOptions        : "--test-execall -j1",
			notificationChannel: "#jenkins-trashbin",  // success is checked globally
			configureInstallOptions: "--build-profile=ci",
			ignoreGerritChanges: deploy
		)
	}

	stage("Archive Results") {
		runOnSlave(label: "frontend") {
			archiveArtifacts("build/${PROJECT_NAME}/**/*")
			publishHTML([allowMissing: false,
			             reportDir   : "build/${PROJECT_NAME}/html/html",
			             reportFiles : "index.html",
			             reportName  : "HTML Output"])
		}
	}

	conditionalStage(name: "Deployment to GitHub Pages", skip: !deploy) {
		runOnSlave(label: "frontend") {
			dir("build/much-demos-such-wow/jupyter/jupyter") {
				jesh("git init")
				jesh("sed 's/VERSIONPLACEHOLDER/experimental/g' ${env.WORKSPACE}/much-demos-such-wow/.ci/patches/ebrains_kernel_template.patch > ebrain_kernel.patch")
				jesh("for fn in *.ipynb; do patch \"\$fn\" \"ebrains_kernel.patch\"; done")
				jesh("git add *.ipynb _static")
				jesh("git commit -m \"build ${currentBuild.displayName}\"")
				jesh("git remote add origin git@github-brainscales2-demos_jupyter-notebooks:electronicvisions/brainscales2-demos.git")
				lock("much-demos-such-wow_GITHUB-UPLOAD") {
					jesh("git push -f origin HEAD:jupyter-notebooks-experimental")
				}
			}
		}
	}
} catch (Throwable t) {
	notifyFailure(mattermostChannel: "#dls-software")
	throw t
}

if (currentBuild.currentResult != "SUCCESS") {
	notifyFailure(mattermostChannel: "#dls-software")
}
